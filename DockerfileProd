# Stage 1: Build the React application
FROM node:20-alpine AS build

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and yarn.lock to install dependencies
# Install dependencies separately to enable caching
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Install dependencies
RUN yarn install

# Copy the rest of the application source code
COPY . ./

# Build the React application
RUN yarn build

# Stage 2: Serve the application with Nginx
FROM nginx:alpine

# Copy the built React files from the previous stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy a custom Nginx configuration (optional)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80 for the Nginx server
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
